{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$10","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/api/helpSession.js","filename":"imports/api/helpSession.js","sourceMapTarget":"imports/api/helpSession.js.map","sourceMaps":true,"presets":[],"passPerPreset":false,"envName":"development","cwd":"/Users/Zac/Documents/Code/GitHub/Meteor/helpmates","parserOpts":{"sourceType":"module","sourceFileName":"imports/api/helpSession.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","classProperties","asyncGenerators"]},"generatorOpts":{"filename":"imports/api/helpSession.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"imports/api/helpSession.js.map","sourceFileName":"imports/api/helpSession.js"}},"code":"let Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nconst HelpSessions = new Mongo.Collection('helpSessions');\nMeteor.methods({\n  // SETTERS\n  'helpSessions.create': ({\n    userId,\n    tutorId,\n    courseId,\n    startDate,\n    endDate\n  }) => {\n    return HelpSessions.insert({\n      userId,\n      tutorId,\n      courseId,\n      startDate,\n      endDate,\n      accepted: false,\n      denied: false,\n      denyMessage: \"\",\n      cancelled: false,\n      cancelledBy: null,\n      cancelMessage: \"\"\n    });\n  },\n  // GETTERS\n  'helpSessions.get': ({\n    userId\n  }) => {\n    var sessions = HelpSessions.find({\n      $or: [{\n        userId: userId\n      }, {\n        tutorId: userId\n      }]\n    }).fetch();\n    sessions.map(session => {\n      if (session.userId == userId) {\n        session.name = Meteor.users.findOne(session.tutorId).name;\n        session.subtitle = \"Getting help\";\n      } else if (session.tutorId == userId) {\n        session.name = Meteor.users.findOne(session.userId).name;\n        session.subtitle = \"Helping\";\n      }\n\n      return session;\n    });\n    return sessions;\n  }\n});\nmodule.exportDefault(HelpSessions);","map":{"version":3,"sources":["imports/api/helpSession.js"],"names":["Mongo","module","watch","require","v","Meteor","HelpSessions","Collection","methods","userId","tutorId","courseId","startDate","endDate","insert","accepted","denied","denyMessage","cancelled","cancelledBy","cancelMessage","sessions","find","$or","fetch","map","session","name","users","findOne","subtitle","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,QAAMI,CAAN,EAAQ;AAACJ,YAAMI,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAGjF,MAAME,eAAe,IAAIN,MAAMO,UAAV,CAAqB,cAArB,CAArB;AAEAF,OAAOG,OAAP,CAAe;AACX;AACA,yBAAuB,CAAC;AAAEC,UAAF;AAAUC,WAAV;AAAmBC,YAAnB;AAA6BC,aAA7B;AAAwCC;AAAxC,GAAD,KAAuD;AAC1E,WAAOP,aAAaQ,MAAb,CAAoB;AAAEL,YAAF;AAAUC,aAAV;AAAmBC,cAAnB;AAA6BC,eAA7B;AAAwCC,aAAxC;AAAiDE,gBAAU,KAA3D;AAAkEC,cAAQ,KAA1E;AAAiFC,mBAAa,EAA9F;AAAkGC,iBAAW,KAA7G;AAAoHC,mBAAa,IAAjI;AAAuIC,qBAAe;AAAtJ,KAApB,CAAP;AACH,GAJU;AAMX;AACA,sBAAoB,CAAC;AAACX;AAAD,GAAD,KAAc;AAC9B,QAAIY,WAAWf,aAAagB,IAAb,CAAkB;AAACC,WAAK,CAAC;AAACd,gBAAQA;AAAT,OAAD,EAAmB;AAACC,iBAASD;AAAV,OAAnB;AAAN,KAAlB,EAAgEe,KAAhE,EAAf;AACAH,aAASI,GAAT,CAAaC,WAAW;AACpB,UAAIA,QAAQjB,MAAR,IAAkBA,MAAtB,EAA8B;AAC1BiB,gBAAQC,IAAR,GAAetB,OAAOuB,KAAP,CAAaC,OAAb,CAAqBH,QAAQhB,OAA7B,EAAsCiB,IAArD;AACAD,gBAAQI,QAAR,GAAmB,cAAnB;AACH,OAHD,MAGO,IAAIJ,QAAQhB,OAAR,IAAmBD,MAAvB,EAA+B;AAClCiB,gBAAQC,IAAR,GAAetB,OAAOuB,KAAP,CAAaC,OAAb,CAAqBH,QAAQjB,MAA7B,EAAqCkB,IAApD;AACAD,gBAAQI,QAAR,GAAmB,SAAnB;AACH;;AACD,aAAOJ,OAAP;AACH,KATD;AAUA,WAAOL,QAAP;AACH;AApBU,CAAf;AALApB,OAAO8B,aAAP,CA4BezB,YA5Bf","file":"imports/api/helpSession.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\n\nconst HelpSessions = new Mongo.Collection('helpSessions');\n\nMeteor.methods({\n    // SETTERS\n    'helpSessions.create': ({ userId, tutorId, courseId, startDate, endDate }) => {\n        return HelpSessions.insert({ userId, tutorId, courseId, startDate, endDate, accepted: false, denied: false, denyMessage: \"\", cancelled: false, cancelledBy: null, cancelMessage: \"\"  });\n    },\n\n    // GETTERS\n    'helpSessions.get': ({userId}) => {\n        var sessions = HelpSessions.find({$or: [{userId: userId}, {tutorId: userId}]}).fetch()\n        sessions.map(session => {\n            if (session.userId == userId) {\n                session.name = Meteor.users.findOne(session.tutorId).name\n                session.subtitle = \"Getting help\"\n            } else if (session.tutorId == userId) {\n                session.name = Meteor.users.findOne(session.userId).name\n                session.subtitle = \"Helping\"\n            }\n            return session\n        })\n        return sessions\n    }\n});\n\nexport default HelpSessions;"]},"hash":"cb5075edd7318984d3b03aed4be80270c2dfe4e9"}
