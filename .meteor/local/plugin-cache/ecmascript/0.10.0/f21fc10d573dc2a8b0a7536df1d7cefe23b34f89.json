{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$10","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/api/courses.js","filename":"imports/api/courses.js","sourceMapTarget":"imports/api/courses.js.map","sourceMaps":true,"presets":[],"passPerPreset":false,"envName":"development","cwd":"/Users/Zac/Documents/Code/GitHub/Meteor/helpmates","parserOpts":{"sourceType":"module","sourceFileName":"imports/api/courses.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","classProperties","asyncGenerators"]},"generatorOpts":{"filename":"imports/api/courses.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"imports/api/courses.js.map","sourceFileName":"imports/api/courses.js"}},"code":"let Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 0);\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 1);\nlet Universities;\nmodule.watch(require(\"./universities\"), {\n  default(v) {\n    Universities = v;\n  }\n\n}, 2);\nlet Conversations;\nmodule.watch(require(\"./conversations\"), {\n  default(v) {\n    Conversations = v;\n  }\n\n}, 3);\nconst Courses = new Mongo.Collection('courses');\nMeteor.methods({\n  'courses.addOne': ({\n    universityId,\n    title1,\n    title2,\n    subject\n  }) => {\n    const uni = Universities.findOne(universityId);\n\n    if (uni == null) {\n      throw new Meteor.Error('courses.addOne.notFound', 'University by that ID not found');\n    } // create new conversation\n\n\n    conversationId = Conversations.insert({\n      messages: []\n    });\n    return Courses.insert({\n      universityId,\n      title1,\n      title2,\n      subject,\n      conversationId\n    });\n  },\n  'courses.getAllForUni': ({\n    universityId\n  }) => {\n    const uni = Universities.findOne(universityId);\n\n    if (uni == null) {\n      throw new Meteor.Error('courses.addOne.notFound', 'University by that ID not found');\n    }\n\n    return Courses.find({\n      universityId: universityId\n    }).fetch();\n  }\n});\nMeteor.publish('courses', function () {\n  return Courses.find({});\n});\nMeteor.publish('courseChat', function ({\n  id\n}) {\n  // get course data\n  var course = Courses.findOne({\n    _id: id\n  });\n  console.log(course.conversationId);\n  return Conversations.find({\n    _id: course.conversationId\n  });\n});\nmodule.exportDefault(Courses);","map":{"version":3,"sources":["imports/api/courses.js"],"names":["Mongo","module","watch","require","v","Meteor","Universities","default","Conversations","Courses","Collection","methods","universityId","title1","title2","subject","uni","findOne","Error","conversationId","insert","messages","find","fetch","publish","id","course","_id","console","log","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,QAAMI,CAAN,EAAQ;AAACJ,YAAMI,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,YAAJ;AAAiBL,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACI,UAAQH,CAAR,EAAU;AAACE,mBAAaF,CAAb;AAAe;;AAA3B,CAAvC,EAAoE,CAApE;AAAuE,IAAII,aAAJ;AAAkBP,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACI,UAAQH,CAAR,EAAU;AAACI,oBAAcJ,CAAd;AAAgB;;AAA5B,CAAxC,EAAsE,CAAtE;AAK1P,MAAMK,UAAU,IAAIT,MAAMU,UAAV,CAAqB,SAArB,CAAhB;AAEAL,OAAOM,OAAP,CAAe;AACX,oBAAkB,CAAC;AAAEC,gBAAF;AAAgBC,UAAhB;AAAwBC,UAAxB;AAAgCC;AAAhC,GAAD,KAA+C;AAC7D,UAAMC,MAAMV,aAAaW,OAAb,CAAqBL,YAArB,CAAZ;;AAEA,QAAII,OAAO,IAAX,EAAiB;AACb,YAAM,IAAIX,OAAOa,KAAX,CAAiB,yBAAjB,EACN,iCADM,CAAN;AAEH,KAN4D,CAQ7D;;;AACAC,qBAAiBX,cAAcY,MAAd,CAAqB;AAACC,gBAAU;AAAX,KAArB,CAAjB;AAEA,WAAOZ,QAAQW,MAAR,CAAe;AAAER,kBAAF;AAAgBC,YAAhB;AAAwBC,YAAxB;AAAgCC,aAAhC;AAAyCI;AAAzC,KAAf,CAAP;AACH,GAbU;AAeX,0BAAwB,CAAC;AAACP;AAAD,GAAD,KAAoB;AACxC,UAAMI,MAAMV,aAAaW,OAAb,CAAqBL,YAArB,CAAZ;;AAEA,QAAII,OAAO,IAAX,EAAiB;AACb,YAAM,IAAIX,OAAOa,KAAX,CAAiB,yBAAjB,EACN,iCADM,CAAN;AAEH;;AAED,WAAOT,QAAQa,IAAR,CAAa;AAACV,oBAAcA;AAAf,KAAb,EAA2CW,KAA3C,EAAP;AACH;AAxBU,CAAf;AA2BAlB,OAAOmB,OAAP,CAAe,SAAf,EAA0B,YAAY;AAClC,SAAOf,QAAQa,IAAR,CAAa,EAAb,CAAP;AACH,CAFD;AAIAjB,OAAOmB,OAAP,CAAe,YAAf,EAA6B,UAAS;AAACC;AAAD,CAAT,EAAe;AACxC;AACA,MAAIC,SAASjB,QAAQQ,OAAR,CAAgB;AAACU,SAAKF;AAAN,GAAhB,CAAb;AACAG,UAAQC,GAAR,CAAYH,OAAOP,cAAnB;AACA,SAAOX,cAAcc,IAAd,CAAmB;AAACK,SAAKD,OAAOP;AAAb,GAAnB,CAAP;AACH,CALD;AAtCAlB,OAAO6B,aAAP,CA6CerB,OA7Cf","file":"imports/api/courses.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\nimport Universities from './universities';\nimport Conversations from './conversations';\n\nconst Courses = new Mongo.Collection('courses');\n\nMeteor.methods({\n    'courses.addOne': ({ universityId, title1, title2, subject }) => {\n        const uni = Universities.findOne(universityId);\n\n        if (uni == null) {\n            throw new Meteor.Error('courses.addOne.notFound',\n            'University by that ID not found');\n        }\n\n        // create new conversation\n        conversationId = Conversations.insert({messages: []})\n\n        return Courses.insert({ universityId, title1, title2, subject, conversationId });\n    },\n    \n    'courses.getAllForUni': ({universityId}) => {\n        const uni = Universities.findOne(universityId);\n\n        if (uni == null) {\n            throw new Meteor.Error('courses.addOne.notFound',\n            'University by that ID not found');\n        }\n\n        return Courses.find({universityId: universityId}).fetch();\n    },\n})\n\nMeteor.publish('courses', function () {\n    return Courses.find({})\n});\n\nMeteor.publish('courseChat', function({id}) {\n    // get course data\n    var course = Courses.findOne({_id: id})\n    console.log(course.conversationId);\n    return Conversations.find({_id: course.conversationId})\n});\n\nexport default Courses;\n\n// Meteor.call('courses.addOne', 'bJ2ppiHYrMFRThfWE', 'Intro to Computer Science I', 'COMP 1671', 'Computer Science')\n"]},"hash":"f21fc10d573dc2a8b0a7536df1d7cefe23b34f89"}
