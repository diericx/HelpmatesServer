{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$6","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$8","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$10","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$12","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$13","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$16","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$17","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$18","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$20","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$21","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$22","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$23","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$24","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/api/helpSession.js","filename":"imports/api/helpSession.js","sourceMapTarget":"imports/api/helpSession.js.map","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/Users/Zac/Documents/Code/GitHub/Meteor/helpmates","parserOpts":{"sourceType":"module","sourceFileName":"imports/api/helpSession.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/api/helpSession.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"imports/api/helpSession.js.map","sourceFileName":"imports/api/helpSession.js"}},"code":"var Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Conversations;\nmodule.watch(require(\"./conversations\"), {\n  \"default\": function (v) {\n    Conversations = v;\n  }\n}, 2);\nvar Courses;\nmodule.watch(require(\"./courses\"), {\n  \"default\": function (v) {\n    Courses = v;\n  }\n}, 3);\nvar HelpSessions = new Mongo.Collection('helpSessions');\nMeteor.methods({\n  // SETTERS\n  'helpSessions.create': function (_ref) {\n    var userId = _ref.userId,\n        tutorId = _ref.tutorId,\n        courseId = _ref.courseId,\n        startDate = _ref.startDate,\n        endDate = _ref.endDate;\n    // create new conversation\n    conversationId = Conversations.insert({\n      messages: []\n    }); // create new help session with link to convo\n\n    return HelpSessions.insert({\n      userId: userId,\n      tutorId: tutorId,\n      courseId: courseId,\n      startDate: startDate,\n      endDate: endDate,\n      tutorAccepted: false,\n      tutorDenied: false,\n      denyMessage: \"\",\n      cancelled: false,\n      cancelledBy: null,\n      cancelMessage: \"\",\n      conversationId: conversationId\n    });\n  },\n  'helpSessions.accept': function (_ref2) {\n    var sessionId = _ref2.sessionId;\n    // find session\n    var session = HelpSessions.findOne(sessionId);\n\n    if (session.tutorId == Meteor.userId()) {\n      HelpSessions.update({\n        _id: sessionId\n      }, {\n        $set: {\n          tutorAccepted: true\n        }\n      });\n      return true;\n    }\n\n    return false;\n  }\n});\nMeteor.publish('mySessions', function () {\n  var sessionsCursor = HelpSessions.find({\n    $or: [{\n      userId: Meteor.userId()\n    }, {\n      tutorId: Meteor.userId()\n    }]\n  }, {\n    fields: {\n      _id: 1,\n      courseId: 1,\n      tutorAccepted: 1,\n      tutorDenied: 1,\n      cancelled: 1\n    }\n  });\n  var sessions = sessionsCursor.fetch();\n\n  var studentIds = _.pluck(sessions, \"userId\");\n\n  var tutorIds = _.pluck(sessions, \"tutorId\");\n\n  var userIds = tutorIds.concat(studentIds);\n\n  var courseIds = _.pluck(sessions, \"courseId\");\n\n  var usersCursor = Meteor.users.find({\n    _id: {\n      $in: userIds\n    }\n  });\n  var coursesCursor = Courses.find({\n    _id: {\n      $in: courseIds\n    }\n  });\n  return [sessionsCursor, usersCursor, coursesCursor];\n});\nMeteor.publish('session', function (_ref3) {\n  var id = _ref3.id;\n  // get cursor for this session\n  var sessionCursor = HelpSessions.find({\n    _id: id\n  }); // get the data\n\n  var sessionData = sessionCursor.fetch(); // get cursors for each user and conversation\n\n  var usersCursor = Meteor.users.find({\n    $or: [{\n      userId: sessionData.userId\n    }, {\n      tutorId: sessionData.tutorId\n    }]\n  });\n  var conversationCursor = Conversations.find({\n    _id: sessionData.conversationId\n  });\n  var convData = conversationCursor.fetch();\n  console.log(convData);\n  return [sessionCursor, usersCursor, conversationCursor];\n});\nmodule.exportDefault(HelpSessions);","map":{"version":3,"sources":["imports/api/helpSession.js"],"names":["Mongo","module","watch","require","v","Meteor","Conversations","Courses","HelpSessions","Collection","methods","userId","tutorId","courseId","startDate","endDate","conversationId","insert","messages","tutorAccepted","tutorDenied","denyMessage","cancelled","cancelledBy","cancelMessage","sessionId","session","findOne","update","_id","$set","publish","sessionsCursor","find","$or","fields","sessions","fetch","studentIds","_","pluck","tutorIds","userIds","concat","courseIds","usersCursor","users","$in","coursesCursor","id","sessionCursor","sessionData","conversationCursor","convData","console","log","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,OAAD,YAAOI,CAAP,EAAS;AAACJ,YAAMI,CAAN;AAAQ;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACE,QAAD,YAAQD,CAAR,EAAU;AAACC,aAAOD,CAAP;AAAS;AAApB,CAAtC,EAA4D,CAA5D;AAA+D,IAAIE,aAAJ;AAAkBL,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAAA,uBAASC,CAAT,EAAW;AAACE,oBAAcF,CAAd;AAAgB;AAA5B,CAAxC,EAAsE,CAAtE;AAAyE,IAAIG,OAAJ;AAAYN,OAAOC,KAAP,CAAaC,QAAQ,WAAR,CAAb,EAAkC;AAAA,uBAASC,CAAT,EAAW;AAACG,cAAQH,CAAR;AAAU;AAAtB,CAAlC,EAA0D,CAA1D;AAMvP,IAAMI,eAAe,IAAIR,MAAMS,UAAV,CAAqB,cAArB,CAArB;AAEAJ,OAAOK,OAAP,CAAe;AACX;AACA,yBAAuB,gBAAuD;AAAA,QAApDC,MAAoD,QAApDA,MAAoD;AAAA,QAA5CC,OAA4C,QAA5CA,OAA4C;AAAA,QAAnCC,QAAmC,QAAnCA,QAAmC;AAAA,QAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,QAAdC,OAAc,QAAdA,OAAc;AAC1E;AACAC,qBAAiBV,cAAcW,MAAd,CAAqB;AAACC,gBAAU;AAAX,KAArB,CAAjB,CAF0E,CAG1E;;AACA,WAAOV,aAAaS,MAAb,CAAoB;AAAEN,oBAAF;AAAUC,sBAAV;AAAmBC,wBAAnB;AAA6BC,0BAA7B;AAAwCC,sBAAxC;AAAiDI,qBAAe,KAAhE;AAAuEC,mBAAa,KAApF;AAA4FC,mBAAa,EAAzG;AAA6GC,iBAAW,KAAxH;AAA+HC,mBAAa,IAA5I;AAAkJC,qBAAe,EAAjK;AAAqKR,sBAAgBA;AAArL,KAApB,CAAP;AACH,GAPU;AAQX,yBAAuB,iBAAmB;AAAA,QAAhBS,SAAgB,SAAhBA,SAAgB;AACtC;AACA,QAAMC,UAAUlB,aAAamB,OAAb,CAAqBF,SAArB,CAAhB;;AACA,QAAIC,QAAQd,OAAR,IAAmBP,OAAOM,MAAP,EAAvB,EAAwC;AACpCH,mBAAaoB,MAAb,CACI;AAACC,aAAKJ;AAAN,OADJ,EAEI;AAACK,cAAM;AAACX,yBAAe;AAAhB;AAAP,OAFJ;AAIA,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH;AAnBU,CAAf;AAsBAd,OAAO0B,OAAP,CAAe,YAAf,EAA6B,YAAY;AACrC,MAAIC,iBAAiBxB,aAAayB,IAAb,CAAkB;AAACC,SAAK,CAAC;AAACvB,cAAQN,OAAOM,MAAP;AAAT,KAAD,EAA4B;AAACC,eAASP,OAAOM,MAAP;AAAV,KAA5B;AAAN,GAAlB,EAAkF;AACnGwB,YAAQ;AAACN,WAAK,CAAN;AAAShB,gBAAU,CAAnB;AAAsBM,qBAAe,CAArC;AAAwCC,mBAAa,CAArD;AAAwDE,iBAAW;AAAnE;AAD2F,GAAlF,CAArB;AAGA,MAAIc,WAAWJ,eAAeK,KAAf,EAAf;;AAEA,MAAIC,aAAcC,EAAEC,KAAF,CAAQJ,QAAR,EAAiB,QAAjB,CAAlB;;AACA,MAAIK,WAAWF,EAAEC,KAAF,CAAQJ,QAAR,EAAiB,SAAjB,CAAf;;AAEA,MAAIM,UAAUD,SAASE,MAAT,CAAgBL,UAAhB,CAAd;;AACA,MAAIM,YAAYL,EAAEC,KAAF,CAAQJ,QAAR,EAAkB,UAAlB,CAAhB;;AAEA,MAAIS,cAAcxC,OAAOyC,KAAP,CAAab,IAAb,CAAkB;AAChCJ,SAAM;AAACkB,WAAML;AAAP;AAD0B,GAAlB,CAAlB;AAIA,MAAIM,gBAAgBzC,QAAQ0B,IAAR,CAAa;AAACJ,SAAK;AAACkB,WAAMH;AAAP;AAAN,GAAb,CAApB;AAEA,SAAO,CACHZ,cADG,EAEHa,WAFG,EAGHG,aAHG,CAAP;AAKH,CAvBD;AAyBA3C,OAAO0B,OAAP,CAAe,SAAf,EAA0B,iBAAe;AAAA,MAALkB,EAAK,SAALA,EAAK;AACrC;AACA,MAAIC,gBAAgB1C,aAAayB,IAAb,CAAkB;AAACJ,SAAKoB;AAAN,GAAlB,CAApB,CAFqC,CAGrC;;AACA,MAAIE,cAAcD,cAAcb,KAAd,EAAlB,CAJqC,CAKrC;;AACA,MAAIQ,cAAcxC,OAAOyC,KAAP,CAAab,IAAb,CAAkB;AAACC,SAAK,CAAC;AAACvB,cAAQwC,YAAYxC;AAArB,KAAD,EAA+B;AAACC,eAASuC,YAAYvC;AAAtB,KAA/B;AAAN,GAAlB,CAAlB;AACA,MAAIwC,qBAAqB9C,cAAc2B,IAAd,CAAmB;AAACJ,SAAKsB,YAAYnC;AAAlB,GAAnB,CAAzB;AACA,MAAIqC,WAAWD,mBAAmBf,KAAnB,EAAf;AACAiB,UAAQC,GAAR,CAAYF,QAAZ;AAEA,SAAO,CACHH,aADG,EAEHL,WAFG,EAGHO,kBAHG,CAAP;AAKH,CAhBD;AAvDAnD,OAAOuD,aAAP,CAyEehD,YAzEf","file":"imports/api/helpSession.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\n\nimport Conversations from './conversations';\nimport Courses from \"./courses\";\n\nconst HelpSessions = new Mongo.Collection('helpSessions');\n\nMeteor.methods({\n    // SETTERS\n    'helpSessions.create': ({ userId, tutorId, courseId, startDate, endDate }) => {\n        // create new conversation\n        conversationId = Conversations.insert({messages: []})\n        // create new help session with link to convo\n        return HelpSessions.insert({ userId, tutorId, courseId, startDate, endDate, tutorAccepted: false, tutorDenied: false,  denyMessage: \"\", cancelled: false, cancelledBy: null, cancelMessage: \"\", conversationId: conversationId  });\n    },\n    'helpSessions.accept': ({ sessionId }) => {\n        // find session\n        const session = HelpSessions.findOne(sessionId)\n        if (session.tutorId == Meteor.userId()) {\n            HelpSessions.update(\n                {_id: sessionId},\n                {$set: {tutorAccepted: true}}\n            )\n            return true\n        }\n        return false\n    },\n});\n\nMeteor.publish('mySessions', function () {\n    var sessionsCursor = HelpSessions.find({$or: [{userId: Meteor.userId()}, {tutorId: Meteor.userId()}]}, {\n        fields: {_id: 1, courseId: 1, tutorAccepted: 1, tutorDenied: 1, cancelled: 1}\n    })\n    var sessions = sessionsCursor.fetch()\n\n    var studentIds =  _.pluck(sessions,\"userId\");\n    var tutorIds = _.pluck(sessions,\"tutorId\");\n\n    var userIds = tutorIds.concat(studentIds);\n    var courseIds = _.pluck(sessions, \"courseId\")\n\n    var usersCursor = Meteor.users.find({\n        _id : {$in : userIds}\n    });\n\n    var coursesCursor = Courses.find({_id: {$in : courseIds}})\n\n    return [\n        sessionsCursor,\n        usersCursor,\n        coursesCursor,\n    ];\n});\n\nMeteor.publish('session', function({id}) {\n    // get cursor for this session\n    var sessionCursor = HelpSessions.find({_id: id})\n    // get the data\n    var sessionData = sessionCursor.fetch()\n    // get cursors for each user and conversation\n    var usersCursor = Meteor.users.find({$or: [{userId: sessionData.userId}, {tutorId: sessionData.tutorId}]})\n    var conversationCursor = Conversations.find({_id: sessionData.conversationId})\n    var convData = conversationCursor.fetch()\n    console.log(convData)\n\n    return [\n        sessionCursor,\n        usersCursor,\n        conversationCursor,\n    ];\n});\n\nexport default HelpSessions;"]},"hash":"fbf2c93c7ac9de9ece36e259a9830851302dc9e8"}
