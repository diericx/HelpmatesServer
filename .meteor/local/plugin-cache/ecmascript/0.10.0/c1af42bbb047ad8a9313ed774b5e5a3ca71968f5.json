{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$10","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}}],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/api/users.js","filename":"imports/api/users.js","sourceMapTarget":"imports/api/users.js.map","sourceMaps":true,"presets":[],"passPerPreset":false,"envName":"development","cwd":"/Users/Zac/Documents/Code/GitHub/Meteor/helpmates","parserOpts":{"sourceType":"module","sourceFileName":"imports/api/users.js","plugins":["jsx","jsx","flow","flow","objectRestSpread","objectRestSpread","dynamicImport","classProperties","asyncGenerators"]},"generatorOpts":{"filename":"imports/api/users.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"imports/api/users.js.map","sourceFileName":"imports/api/users.js"}},"code":"Accounts.onCreateUser((options, user) => {\n  // add your extra fields here; don't forget to validate the options, if needed\n  _.extend(user, {\n    createdAt: new Date(),\n    profile: {\n      name: options.name,\n      completedCourses: []\n    }\n  });\n\n  return user;\n});\nMeteor.methods({\n  // SETTERS\n  'users.setName': ({\n    name\n  }) => {\n    var profile = Meteor.user().profile;\n    profile.name = name;\n    Meteor.users.update(Meteor.userId(), {\n      $set: {\n        profile: profile\n      }\n    });\n  },\n  'users.setRate': ({\n    rate\n  }) => {\n    var profile = Meteor.user().profile;\n    profile.rate = rate;\n    Meteor.users.update(Meteor.userId(), {\n      $set: {\n        profile: profile\n      }\n    });\n  },\n  // GETTERS\n  'users.getAvailabilities': () => {\n    const profile = Meteor.user().profile;\n\n    if (profile.availaiblities) {\n      return profile;\n    } else {\n      return [];\n    }\n  },\n  'users.getAllWhoCompletedCourse': ({\n    courseId\n  }) => {\n    const users = Meteor.users.find({\n      \"profile.completedCourses\": {\n        $in: [courseId]\n      }\n    }, {\n      fields: {\n        \"profile\": 1\n      }\n    }).fetch();\n    return users;\n  },\n  'users.addCompletedCourse': ({\n    courseId\n  }) => {\n    // attempt to find user by id\n    const user = Meteor.user(); // make sure this user exists\n\n    if (user == null) {\n      return false;\n    } // update completedCourses array in profile\n\n\n    Meteor.users.update({\n      _id: user._id\n    }, {\n      $addToSet: {\n        \"profile.completedCourses\": courseId\n      }\n    });\n    return true;\n  }\n});","map":{"version":3,"sources":["imports/api/users.js"],"names":["Accounts","onCreateUser","options","user","_","extend","createdAt","Date","profile","name","completedCourses","Meteor","methods","users","update","userId","$set","rate","availaiblities","courseId","find","$in","fields","fetch","_id","$addToSet"],"mappings":"AAAAA,SAASC,YAAT,CAAsB,CAACC,OAAD,EAAUC,IAAV,KAAmB;AACrC;AACAC,IAAEC,MAAF,CAASF,IAAT,EAAe;AACXG,eAAW,IAAIC,IAAJ,EADA;AAEXC,aAAS;AACLC,YAAMP,QAAQO,IADT;AAELC,wBAAkB;AAFb;AAFE,GAAf;;AAQA,SAAOP,IAAP;AACH,CAXD;AAaAQ,OAAOC,OAAP,CAAe;AACX;AACA,mBAAiB,CAAC;AAACH;AAAD,GAAD,KAAY;AACzB,QAAID,UAAUG,OAAOR,IAAP,GAAcK,OAA5B;AACAA,YAAQC,IAAR,GAAeA,IAAf;AACAE,WAAOE,KAAP,CAAaC,MAAb,CACIH,OAAOI,MAAP,EADJ,EAEI;AAAEC,YAAM;AAACR,iBAASA;AAAV;AAAR,KAFJ;AAIH,GATU;AAWX,mBAAiB,CAAC;AAACS;AAAD,GAAD,KAAY;AACzB,QAAIT,UAAUG,OAAOR,IAAP,GAAcK,OAA5B;AACAA,YAAQS,IAAR,GAAeA,IAAf;AACAN,WAAOE,KAAP,CAAaC,MAAb,CACIH,OAAOI,MAAP,EADJ,EAEI;AAAEC,YAAM;AAACR,iBAASA;AAAV;AAAR,KAFJ;AAIH,GAlBU;AAoBX;AACA,6BAA2B,MAAM;AAC7B,UAAMA,UAAUG,OAAOR,IAAP,GAAcK,OAA9B;;AACA,QAAIA,QAAQU,cAAZ,EAA4B;AACxB,aAAOV,OAAP;AACH,KAFD,MAEO;AACH,aAAO,EAAP;AACH;AACJ,GA5BU;AA8BX,oCAAkC,CAAC;AAACW;AAAD,GAAD,KAAgB;AAC9C,UAAMN,QAAQF,OAAOE,KAAP,CAAaO,IAAb,CACV;AAAE,kCAA4B;AAAEC,aAAK,CAAEF,QAAF;AAAP;AAA9B,KADU,EAEV;AAACG,cAAQ;AAAE,mBAAW;AAAb;AAAT,KAFU,EAGXC,KAHW,EAAd;AAKA,WAAOV,KAAP;AACH,GArCU;AAuCX,8BAA4B,CAAC;AAACM;AAAD,GAAD,KAAgB;AACxC;AACA,UAAMhB,OAAOQ,OAAOR,IAAP,EAAb,CAFwC,CAGxC;;AACA,QAAIA,QAAQ,IAAZ,EAAkB;AACd,aAAO,KAAP;AACH,KANuC,CAQxC;;;AACAQ,WAAOE,KAAP,CAAaC,MAAb,CACI;AAACU,WAAKrB,KAAKqB;AAAX,KADJ,EAEI;AAAEC,iBAAW;AAAC,oCAA4BN;AAA7B;AAAb,KAFJ;AAIA,WAAO,IAAP;AACH;AArDU,CAAf","file":"imports/api/users.js.map","sourcesContent":["Accounts.onCreateUser((options, user) => {\n    // add your extra fields here; don't forget to validate the options, if needed\n    _.extend(user, {\n        createdAt: new Date(),\n        profile: {\n            name: options.name,\n            completedCourses: []\n        }\n    });\n    \n    return user;\n});\n\nMeteor.methods({\n    // SETTERS\n    'users.setName': ({name}) => {\n        var profile = Meteor.user().profile\n        profile.name = name\n        Meteor.users.update(\n            Meteor.userId(), \n            { $set: {profile: profile} }\n        )\n    },\n\n    'users.setRate': ({rate}) => {\n        var profile = Meteor.user().profile\n        profile.rate = rate\n        Meteor.users.update(\n            Meteor.userId(), \n            { $set: {profile: profile} }\n        )\n    },\n\n    // GETTERS\n    'users.getAvailabilities': () => {\n        const profile = Meteor.user().profile\n        if (profile.availaiblities) {\n            return profile\n        } else {\n            return []\n        }\n    },\n\n    'users.getAllWhoCompletedCourse': ({courseId}) => {\n        const users = Meteor.users.find(\n            { \"profile.completedCourses\": { $in: [ courseId ] }},\n            {fields: { \"profile\": 1,} \n        }).fetch();\n\n        return users;\n    },\n\n    'users.addCompletedCourse': ({courseId}) => {\n        // attempt to find user by id\n        const user = Meteor.user();\n        // make sure this user exists\n        if (user == null) {\n            return false;\n        }\n\n        // update completedCourses array in profile\n        Meteor.users.update(\n            {_id: user._id}, \n            { $addToSet: {\"profile.completedCourses\": courseId} }\n        )\n        return true;\n    }\n})"]},"hash":"c1af42bbb047ad8a9313ed774b5e5a3ca71968f5"}
