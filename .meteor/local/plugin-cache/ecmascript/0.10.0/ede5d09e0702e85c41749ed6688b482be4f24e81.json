{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$6","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$8","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$10","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$12","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$13","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$16","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$17","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$18","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$20","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$21","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$22","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$23","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$24","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/api/helpSession.js","filename":"imports/api/helpSession.js","sourceMapTarget":"imports/api/helpSession.js.map","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/Users/Zac/Documents/Code/GitHub/Meteor/helpmates","parserOpts":{"sourceType":"module","sourceFileName":"imports/api/helpSession.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/api/helpSession.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"imports/api/helpSession.js.map","sourceFileName":"imports/api/helpSession.js"}},"code":"var Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 0);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 1);\nvar Conversations;\nmodule.watch(require(\"./conversations\"), {\n  \"default\": function (v) {\n    Conversations = v;\n  }\n}, 2);\nvar Courses;\nmodule.watch(require(\"./courses\"), {\n  \"default\": function (v) {\n    Courses = v;\n  }\n}, 3);\nvar HelpSessions = new Mongo.Collection('helpSessions');\nMeteor.methods({\n  // SETTERS\n  'helpSessions.create': function (_ref) {\n    var studentId = _ref.studentId,\n        tutorId = _ref.tutorId,\n        courseId = _ref.courseId,\n        startDate = _ref.startDate,\n        endDate = _ref.endDate;\n    // get cost of this session\n    tutor = Meteor.users.findOne({\n      _id: tutorId\n    });\n    cost = tutor.profile.completedCourses[courseId];\n    console.log(tutor.profile.completedCourses, courseId);\n\n    if (!cost) {\n      return false;\n    } // create new conversation\n\n\n    conversationId = Conversations.insert({\n      messages: []\n    }); // create new help session with link to convo\n\n    return HelpSessions.insert({\n      studentId: studentId,\n      tutorId: tutorId,\n      courseId: courseId,\n      cost: cost,\n      startDate: startDate,\n      endDate: endDate,\n      tutorAccepted: false,\n      tutorDenied: false,\n      tutorStarted: false,\n      studentStarted: false,\n      tutorEnded: false,\n      studentEnded: false,\n      denyMessage: \"\",\n      cancelled: false,\n      cancelledBy: null,\n      cancelMessage: \"\",\n      conversationId: conversationId\n    });\n  },\n  'helpSessions.accept': function (_ref2) {\n    var sessionId = _ref2.sessionId;\n    // find session\n    var session = HelpSessions.findOne(sessionId);\n\n    if (session.tutorId == Meteor.userId()) {\n      HelpSessions.update({\n        _id: sessionId\n      }, {\n        $set: {\n          tutorAccepted: true\n        }\n      });\n      return true;\n    }\n\n    return {\n      error: \"You do not have access to this session\"\n    };\n  },\n  'helpSessions.end': function (_ref3) {\n    var sessionId = _ref3.sessionId;\n    // find session\n    var session = HelpSessions.findOne(sessionId);\n\n    if (session.tutorId == Meteor.userId()) {\n      HelpSessions.update({\n        _id: sessionId\n      }, {\n        $set: {\n          tutorEnded: true\n        }\n      });\n      return true;\n    } else {\n      HelpSessions.update({\n        _id: sessionId\n      }, {\n        $set: {\n          studentEnded: true\n        }\n      });\n      return true;\n    }\n\n    return {\n      error: \"You do not have access to this session\"\n    };\n  },\n  'helpSessions.start': function (_ref4) {\n    var sessionId = _ref4.sessionId;\n    var session = HelpSessions.findOne(sessionId);\n    var userId = Meteor.userId(); // make sure session exists\n\n    if (!session) {\n      return {\n        error: \"Session not found\"\n      };\n    } // if the user is the tutor, set tutorAccepted to true\n\n\n    if (session.tutorId == userId) {\n      // edit local document so we can check the values later\n      session.tutorStarted = true;\n      HelpSessions.update(sessionId, {\n        $set: {\n          tutorStarted: true\n        }\n      });\n    } // if the user is the student, set studentAccepted to true\n\n\n    if (session.studentId == userId) {\n      // edit local document so we can check the values later\n      session.studentStarted = true;\n      HelpSessions.update(sessionId, {\n        $set: {\n          studentStarted: true\n        }\n      });\n    } // set started at if both have started\n\n\n    if (session.tutorStarted && session.studentStarted) {\n      HelpSessions.update(sessionId, {\n        $set: {\n          startedAt: new Date()\n        }\n      });\n    }\n  }\n});\nMeteor.publish('mySessions', function () {\n  var sessionsCursor = HelpSessions.find({\n    $or: [{\n      studentId: Meteor.userId()\n    }, {\n      tutorId: Meteor.userId()\n    }]\n  }, {\n    fields: {\n      _id: 1,\n      courseId: 1,\n      studentId: 1,\n      tutorId: 1,\n      tutorAccepted: 1,\n      tutorDenied: 1,\n      cancelled: 1,\n      endDate: 1\n    }\n  });\n  var sessions = sessionsCursor.fetch();\n\n  var studentIds = _.pluck(sessions, \"studentId\");\n\n  var tutorIds = _.pluck(sessions, \"tutorId\");\n\n  var userIds = tutorIds.concat(studentIds);\n\n  var courseIds = _.pluck(sessions, \"courseId\");\n\n  var usersCursor = Meteor.users.find({\n    _id: {\n      $in: userIds\n    }\n  });\n  var coursesCursor = Courses.find({\n    _id: {\n      $in: courseIds\n    }\n  });\n  return [sessionsCursor, usersCursor, coursesCursor];\n});\nMeteor.publish('session', function (_ref5) {\n  var id = _ref5.id;\n  // get cursor for this session\n  var sessionCursor = HelpSessions.find({\n    _id: id\n  }); // get the data, make sure the session exists\n\n  var sessionData = HelpSessions.findOne(id);\n\n  if (!sessionData) {\n    return {\n      error: \"Session not found\"\n    };\n  } // get cursors for each user and conversation\n\n\n  var conversationCursor = Conversations.find({\n    _id: sessionData.conversationId\n  });\n  return [sessionCursor, conversationCursor];\n});\nmodule.exportDefault(HelpSessions);","map":{"version":3,"sources":["imports/api/helpSession.js"],"names":["Mongo","module","watch","require","v","Meteor","Conversations","Courses","HelpSessions","Collection","methods","studentId","tutorId","courseId","startDate","endDate","tutor","users","findOne","_id","cost","profile","completedCourses","console","log","conversationId","insert","messages","tutorAccepted","tutorDenied","tutorStarted","studentStarted","tutorEnded","studentEnded","denyMessage","cancelled","cancelledBy","cancelMessage","sessionId","session","userId","update","$set","error","startedAt","Date","publish","sessionsCursor","find","$or","fields","sessions","fetch","studentIds","_","pluck","tutorIds","userIds","concat","courseIds","usersCursor","$in","coursesCursor","id","sessionCursor","sessionData","conversationCursor","exportDefault"],"mappings":"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","file":"imports/api/helpSession.js.map","sourcesContent":["import { Mongo } from 'meteor/mongo';\nimport { Meteor } from 'meteor/meteor';\n\nimport Conversations from './conversations';\nimport Courses from \"./courses\";\n\nconst HelpSessions = new Mongo.Collection('helpSessions');\n\nMeteor.methods({\n    // SETTERS\n    'helpSessions.create': ({ studentId, tutorId, courseId, startDate, endDate }) => {\n        // get cost of this session\n        tutor = Meteor.users.findOne({_id: tutorId})\n        cost = tutor.profile.completedCourses[courseId]\n        console.log(tutor.profile.completedCourses, courseId)\n        if (!cost) {\n            return false\n        }\n        // create new conversation\n        conversationId = Conversations.insert({messages: []})\n        // create new help session with link to convo\n        return HelpSessions.insert({ studentId, tutorId, courseId, cost, startDate, endDate, tutorAccepted: false, tutorDenied: false, tutorStarted: false, studentStarted: false, tutorEnded: false, studentEnded: false,  denyMessage: \"\", cancelled: false, cancelledBy: null, cancelMessage: \"\", conversationId: conversationId  });\n    },\n    'helpSessions.accept': ({ sessionId }) => {\n        // find session\n        const session = HelpSessions.findOne(sessionId)\n        if (session.tutorId == Meteor.userId()) {\n            HelpSessions.update(\n                {_id: sessionId},\n                {$set: {tutorAccepted: true}}\n            )\n            return true\n        }\n        return {error: \"You do not have access to this session\"}\n    },\n    'helpSessions.end': ({ sessionId }) => {\n        // find session\n        const session = HelpSessions.findOne(sessionId)\n        if (session.tutorId == Meteor.userId()) {\n            HelpSessions.update(\n                {_id: sessionId},\n                {$set: {tutorEnded: true}}\n            )\n            return true\n        } else {\n            HelpSessions.update(\n                {_id: sessionId},\n                {$set: {studentEnded: true}}\n            )\n            return true\n        }\n        return {error: \"You do not have access to this session\"}\n    },\n    'helpSessions.start': ({ sessionId }) => {\n        const session = HelpSessions.findOne(sessionId)\n        const userId = Meteor.userId()\n        // make sure session exists\n        if (!session) {\n            return {error: \"Session not found\"}\n        }\n        // if the user is the tutor, set tutorAccepted to true\n        if (session.tutorId == userId) {\n            // edit local document so we can check the values later\n            session.tutorStarted = true\n            HelpSessions.update(\n                sessionId, \n                {$set: {tutorStarted: true}}\n            )\n        }\n        // if the user is the student, set studentAccepted to true\n        if (session.studentId == userId) {\n            // edit local document so we can check the values later\n            session.studentStarted = true\n            HelpSessions.update(\n                sessionId, \n                {$set: {studentStarted: true}}\n            )\n        }\n        // set started at if both have started\n        if (session.tutorStarted && session.studentStarted) {\n            HelpSessions.update(\n                sessionId, \n                {$set: {startedAt: new Date()}}\n            )\n        }\n    }\n});\n\nMeteor.publish('mySessions', function () {\n    var sessionsCursor = HelpSessions.find({$or: [{studentId: Meteor.userId()}, {tutorId: Meteor.userId()}]}, {\n        fields: {_id: 1, courseId: 1, studentId: 1, tutorId: 1, tutorAccepted: 1, tutorDenied: 1, cancelled: 1, endDate: 1}\n    })\n    var sessions = sessionsCursor.fetch()\n\n    var studentIds =  _.pluck(sessions,\"studentId\");\n    var tutorIds = _.pluck(sessions,\"tutorId\");\n\n    var userIds = tutorIds.concat(studentIds);\n    var courseIds = _.pluck(sessions, \"courseId\")\n\n    var usersCursor = Meteor.users.find({\n        _id : {$in : userIds}\n    });\n\n    var coursesCursor = Courses.find({_id: {$in : courseIds}})\n\n    return [\n        sessionsCursor,\n        usersCursor,\n        coursesCursor,\n    ];\n});\n\nMeteor.publish('session', function({id}) {\n    // get cursor for this session\n    var sessionCursor = HelpSessions.find({_id: id})\n    // get the data, make sure the session exists\n    var sessionData = HelpSessions.findOne(id)\n    if (!sessionData) {\n        return {error: \"Session not found\"}\n    }\n    // get cursors for each user and conversation\n    var conversationCursor = Conversations.find({_id: sessionData.conversationId})\n\n    return [\n        sessionCursor,\n        conversationCursor,\n    ];\n});\n\nexport default HelpSessions;"]},"hash":"ede5d09e0702e85c41749ed6688b482be4f24e81"}
