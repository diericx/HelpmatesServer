{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$1$2","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$6","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$8","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$10","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$12","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$13","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$16","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$17","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$18","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$20","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$21","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$22","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$23","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$24","visitor":{"_exploded":{},"_verified":{},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"ast":true,"babelrc":false,"sourceFileName":"imports/api/users.js","filename":"imports/api/users.js","sourceMapTarget":"imports/api/users.js.map","sourceMaps":true,"passPerPreset":false,"envName":"development","cwd":"/Users/Zac/Documents/Code/GitHub/Meteor/helpmates","parserOpts":{"sourceType":"module","sourceFileName":"imports/api/users.js","plugins":["dynamicImport","classProperties","jsx","jsx","flow","asyncGenerators","objectRestSpread","objectRestSpread","flow","asyncGenerators"]},"generatorOpts":{"filename":"imports/api/users.js","comments":true,"compact":false,"sourceMaps":true,"sourceMapTarget":"imports/api/users.js.map","sourceFileName":"imports/api/users.js"}},"code":"Accounts.onCreateUser(function (options, user) {\n  // add your extra fields here; don't forget to validate the options, if needed\n  _.extend(user, {\n    createdAt: new Date(),\n    profile: {\n      name: options.name,\n      imageId: null,\n      completedCourses: {},\n      rate: 0,\n      availabilities: []\n    }\n  });\n\n  return user;\n});\nMeteor.methods({\n  // SETTERS\n  'users.setName': function (_ref) {\n    var name = _ref.name;\n    var profile = Meteor.user().profile;\n    profile.name = name;\n    Meteor.users.update(Meteor.userId(), {\n      $set: {\n        profile: profile\n      }\n    });\n  },\n  'users.setProfileImage': function (_ref2) {\n    var image = _ref2.image;\n    FS.Utility.eachFile(event, function (image) {\n      Images.insert(file, function (err, fileObj) {\n        if (err) {\n          return false;\n        } else {\n          // update profile to include profile image id\n          Meteor.users.update(Meteor.userId(), {\n            $set: {\n              \"profile.imageId\": fileObj_id\n            }\n          });\n          return true;\n        } // Inserted new doc with ID fileObj._id, and kicked off the data upload using HTTP\n\n      });\n    });\n  },\n  'users.addCompletedCourse': function (_ref3) {\n    var courseId = _ref3.courseId,\n        rate = _ref3.rate;\n    // attempt to find user by id\n    var user = Meteor.user(); // make sure this user exists\n\n    if (user == null) {\n      return false;\n    } // update set query\n\n\n    var set = {\n      profile: {\n        completedCourses: user.profile.completedCourses\n      }\n    };\n    set.profile.completedCourses[courseId] = rate; // update completedCourses array in profile\n\n    Meteor.users.update({\n      _id: user._id\n    }, {\n      $set: set\n    });\n    return true;\n  },\n  'users.setRateForCourse': function (_ref4) {\n    var courseId = _ref4.courseId,\n        rate = _ref4.rate;\n    // update set query\n    var set = {\n      \"profile.completedCourses\": {}\n    };\n    set.profile.completedCourses[courseId] = rate; // apply it\n\n    Meteor.users.update(Meteor.userId(), {\n      $set: set\n    });\n  },\n  'users.addAvailability': function (_ref5) {\n    var date = _ref5.date,\n        length = _ref5.length,\n        repeats = _ref5.repeats;\n    var newAvailability = {\n      \"date\": date,\n      \"length\": length,\n      \"repeats\": repeats\n    };\n    console.log(newAvailability);\n    Meteor.users.update({\n      _id: Meteor.userId()\n    }, {\n      $addToSet: {\n        \"profile.availabilities\": newAvailability\n      }\n    });\n  },\n  // GETTERS\n  'users.getAvailabilities': function (_ref6) {\n    var userId = _ref6.userId;\n    console.log(\"userId: \", userId);\n    var user = Meteor.users.findOne(userId);\n\n    if (user != 'undefined') {\n      var profile = user.profile;\n      return user.profile.availabilities;\n    } else {\n      return [];\n    }\n  },\n  'users.getAllWhoCompletedCourse': function (_ref7) {\n    var courseId = _ref7.courseId;\n    var users = Meteor.users.find({\n      \"profile.completedCourses\": {\n        $in: [courseId]\n      }\n    }, {\n      fields: {\n        \"profile\": 1\n      }\n    }).fetch();\n    return users;\n  }\n});\nMeteor.publish('tutors', function () {\n  var tutors = Meteor.users.find({\n    \"profile.completedCourses\": {\n      $ne: []\n    }\n  }, {\n    fields: {\n      profile: 1,\n      _id: 1\n    }\n  });\n  return tutors;\n});","map":{"version":3,"sources":["imports/api/users.js"],"names":["Accounts","onCreateUser","options","user","_","extend","createdAt","Date","profile","name","imageId","completedCourses","rate","availabilities","Meteor","methods","users","update","userId","$set","image","FS","Utility","eachFile","event","Images","insert","file","err","fileObj","fileObj_id","courseId","set","_id","date","length","repeats","newAvailability","console","log","$addToSet","findOne","find","$in","fields","fetch","publish","tutors","$ne"],"mappings":"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","file":"imports/api/users.js.map","sourcesContent":["Accounts.onCreateUser((options, user) => {\n    // add your extra fields here; don't forget to validate the options, if needed\n    _.extend(user, {\n        createdAt: new Date(),\n        profile: {\n            name: options.name,\n            imageId: null,\n            completedCourses: {},\n            rate: 0,\n            availabilities: [],\n        }\n    });\n    \n    return user;\n});\n\nMeteor.methods({\n    // SETTERS\n    'users.setName': ({name}) => {\n        var profile = Meteor.user().profile\n        profile.name = name\n        Meteor.users.update(\n            Meteor.userId(), \n            { $set: {profile: profile} }\n        )\n    },\n\n    'users.setProfileImage': ({image}) => {\n        FS.Utility.eachFile(event, function(image) {\n            Images.insert(file, function (err, fileObj) {\n                if (err) {\n                    return false;\n                } else {\n                    // update profile to include profile image id\n                    Meteor.users.update(\n                        Meteor.userId(), \n                        { $set: {\"profile.imageId\": fileObj_id} }\n                    )\n                    return true;\n                }\n                // Inserted new doc with ID fileObj._id, and kicked off the data upload using HTTP\n            });\n        });\n    },\n\n    'users.addCompletedCourse': ({courseId, rate}) => {\n        // attempt to find user by id\n        const user = Meteor.user();\n        // make sure this user exists\n        if (user == null) {\n            return false;\n        }\n        // update set query\n        var set = {profile: {completedCourses: user.profile.completedCourses}};\n        set.profile.completedCourses[courseId] = rate;\n        // update completedCourses array in profile\n        Meteor.users.update(\n            {_id: user._id}, \n            { $set: set }\n        )\n        return true;\n    },\n\n    'users.setRateForCourse': ({courseId, rate}) => {\n        // update set query\n        var set = {\"profile.completedCourses\": {}};\n        set.profile.completedCourses[courseId] = rate;\n        // apply it\n        Meteor.users.update(\n            Meteor.userId(), \n            { $set: set }\n        )\n    },\n\n    'users.addAvailability': ({date, length, repeats}) => {\n        var newAvailability = {\"date\": date, \"length\": length, \"repeats\": repeats}\n        console.log(newAvailability)\n        Meteor.users.update(\n            {_id: Meteor.userId()}, \n            { $addToSet: {\"profile.availabilities\": newAvailability} }\n        )\n    },\n\n    // GETTERS\n    'users.getAvailabilities': ({userId}) => {\n        console.log(\"userId: \", userId)\n        const user = Meteor.users.findOne(userId)\n        \n        if (user != 'undefined') {\n            const profile = user.profile\n            return user.profile.availabilities\n        } else {\n            return []\n        }\n        \n    },\n\n    'users.getAllWhoCompletedCourse': ({courseId}) => {\n        const users = Meteor.users.find(\n            { \"profile.completedCourses\": { $in: [ courseId ] }},\n            {fields: { \"profile\": 1,} \n        }).fetch();\n\n        return users;\n    },\n})\n\nMeteor.publish('tutors', function () {\n    var tutors = Meteor.users.find(\n        {\"profile.completedCourses\": {$ne: []}},\n        {\n            fields: {\n                profile: 1, _id: 1,\n            }\n        }\n    )\n    return tutors\n});"]},"hash":"7eb4782da91c35cf03f71585c932c622e5047f6e"}
